# Generated by Django 5.2.2 on 2025-06-05 12:38

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JobSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('base_url', models.URLField(validators=[django.core.validators.URLValidator()])),
                ('is_active', models.BooleanField(default=True)),
                ('scraping_enabled', models.BooleanField(default=True)),
                ('scraping_config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('keywords', models.JSONField(default=list)),
                ('locations', models.JSONField(default=list)),
                ('employment_types', models.JSONField(default=list)),
                ('experience_levels', models.JSONField(default=list)),
                ('salary_min', models.PositiveIntegerField(blank=True, null=True)),
                ('is_remote_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_alerts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('external_id', models.CharField(blank=True, help_text='ID from the source website', max_length=200)),
                ('title', models.CharField(max_length=300)),
                ('company_name', models.CharField(max_length=200)),
                ('company_logo_url', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True)),
                ('location', models.CharField(max_length=200)),
                ('is_remote', models.BooleanField(default=False)),
                ('employment_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('internship', 'Internship'), ('freelance', 'Freelance')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(blank=True, choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('manager', 'Manager'), ('director', 'Director'), ('executive', 'Executive')], max_length=20)),
                ('salary_min', models.PositiveIntegerField(blank=True, null=True)),
                ('salary_max', models.PositiveIntegerField(blank=True, null=True)),
                ('salary_currency', models.CharField(default='USD', max_length=3)),
                ('source_url', models.URLField(validators=[django.core.validators.URLValidator()])),
                ('application_url', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('required_skills', models.JSONField(blank=True, default=list)),
                ('preferred_skills', models.JSONField(blank=True, default=list)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('is_auto_applicable', models.BooleanField(default=False)),
                ('auto_apply_difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_listings', to='jobs.jobsource')),
            ],
            options={
                'ordering': ['-posted_date', '-scraped_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='jobs.joblisting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.PositiveIntegerField()),
                ('skills_match_score', models.PositiveIntegerField()),
                ('experience_match_score', models.PositiveIntegerField()),
                ('location_match_score', models.PositiveIntegerField()),
                ('salary_match_score', models.PositiveIntegerField()),
                ('match_analysis', models.JSONField(blank=True, default=dict)),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='jobs.joblisting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_matches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-overall_score', '-created_at'],
                'unique_together': {('user', 'job')},
            },
        ),
        migrations.AddIndex(
            model_name='joblisting',
            index=models.Index(fields=['title', 'company_name'], name='jobs_joblis_title_8872a3_idx'),
        ),
        migrations.AddIndex(
            model_name='joblisting',
            index=models.Index(fields=['location', 'is_remote'], name='jobs_joblis_locatio_5fc262_idx'),
        ),
        migrations.AddIndex(
            model_name='joblisting',
            index=models.Index(fields=['employment_type', 'experience_level'], name='jobs_joblis_employm_721cbd_idx'),
        ),
        migrations.AddIndex(
            model_name='joblisting',
            index=models.Index(fields=['posted_date'], name='jobs_joblis_posted__602263_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='savedjob',
            unique_together={('user', 'job')},
        ),
    ]
